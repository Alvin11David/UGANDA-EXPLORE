import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:carousel_slider/carousel_slider.dart';
import 'package:provider/provider.dart';
import'firebase_options.dart';
import'services/firestore_service.dart';

void main() async {
WidgetsFlutterBinding.ensureInitialized();

await Firebase.InitializeApp(
  options:
DefaultFirebaseOptions.currentPlatform,);
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MultiProvider(
      providers: [
        Provider<FirestoreService>(
          create:(_) =>
FirestoreService(),
        )

      ],
      child:MaterialApp(
         debugShowCheckedModeBanner:
false,
       title: 'Tourism Image Carousel',
       theme: ThemeData(
        primarySwatch: Colors.blue,
        scaffoldBackgroundColor:
Colors.white,
          visualDensity:
VisualDensity.adaptivePlatformDensity,
          appBarTheme: const AppBarTheme(
            backgroundColor:
Colors.white,
             foregroundColor:
Colors.black,
            elevation: 1,
      ),
      home: const ImageCarouselScreen(),
    );
  }
}

class ImageCarouselScreen extends StatefulWidget {
  const ImageCarouselScreen({super.key});

  @override
  State<ImageCarouselScreen> createState() => _ImageCarouselScreenState();
}

class _ImageCarouselScreenState extends State<ImageCarouselScreen> {
  int _current = 0; // Tracks the current active image index
  final CarouselController _controller = CarouselController(); // Controller for the carousel

  // List of placeholder image URLs for tourism destinations in Uganda
  final List<String> imgList = [
    'https://placehold.co/600x300/A8DADC/FFFFFF?text=Bwindi+Impenetrable+NP',
    'https://placehold.co/600x300/457B9D/FFFFFF?text=Queen+Elizabeth+NP',
    'https://placehold.co/600x300/1D3557/FFFFFF?text=Murchison+Falls+NP',
    'https://placehold.co/600x300/F4A261/FFFFFF?text=Lake+Bunyonyi',
    'https://placehold.co/600x300/E76F51/FFFFFF?text=Jinja+-+Nile+Source',
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Explore Uganda'),
        centerTitle: true,
        backgroundColor: Colors.blueAccent,
        elevation: 0,
      ),
      body: Center(
        child: SingleChildScrollView( // Allows content to scroll if it overflows
          padding: const EdgeInsets.all(16.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              const Text(
                'Discover Beautiful Destinations',
                style: TextStyle(
                  fontSize: 24,
                  fontWeight: FontWeight.bold,
                  color: Colors.black87,
                ),
                textAlign: TextAlign.center,
              ),
              const SizedBox(height: 20),

              // Image Carousel
              Container(
                decoration: BoxDecoration(
                  borderRadius: BorderRadius.circular(20.0), // Rounded corners for the container
                  boxShadow: [
                    BoxShadow(
                      color: Colors.grey.withOpacity(0.3),
                      spreadRadius: 5,
                      blurRadius: 7,
                      offset: const Offset(0, 3), // changes position of shadow
                    ),
                  ],
                ),
                child: ClipRRect( // Clip images to match container's rounded corners
                  borderRadius: BorderRadius.circular(20.0),
                  child: CarouselSlider(
                    carouselController: _controller,
                    options: CarouselOptions(
                      height: 300.0, // Fixed height for the carousel
                      enlargeCenterPage: true, // Make the current image slightly larger
                      autoPlay: true, // Auto-play the carousel
                      aspectRatio: 16 / 9, // Aspect ratio of the images
                      autoPlayCurve: Curves.fastOutSlowIn,
                      enableInfiniteScroll: true,
                      autoPlayAnimationDuration: const Duration(milliseconds: 800),
                      viewportFraction: 0.8, // Fraction of the viewport taken by each item
                      onPageChanged: (index, reason) {
                        setState(() {
                          _current = index; // Update the current index when page changes
                        });
                      },
                    ),
                    items: imgList.map((item) => Builder(
                      builder: (BuildContext context) {
                        return Container(
                          width: MediaQuery.of(context).size.width,
                          margin: const EdgeInsets.symmetric(horizontal: 5.0),
                          decoration: BoxDecoration(
                            color: Colors.grey[200], // Placeholder background color
                            borderRadius: BorderRadius.circular(10.0),
                          ),
                          child: Image.network(
                            item,
                            fit: BoxFit.cover, // Cover the container space
                            loadingBuilder: (BuildContext context, Widget child, ImageChunkEvent? loadingProgress) {
                              if (loadingProgress == null) return child;
                              return Center(
                                child: CircularProgressIndicator(
                                  value: loadingProgress.expectedTotalBytes != null
                                      ? loadingProgress.cumulativeBytesLoaded / loadingProgress.expectedTotalBytes!
                                      : null,
                                ),
                              );
                            },
                            errorBuilder: (BuildContext context, Object exception, StackTrace? stackTrace) {
                              return const Center(
                                child: Icon(Icons.broken_image, size: 50, color: Colors.grey),
                              );
                            },
                          ),
                        );
                      },
                    )).toList(),
                  ),
                ),
              ),
              const SizedBox(height: 20),

              // Dot Indicators
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: imgList.asMap().entries.map((entry) {  ;













                 import 'package:flutter/material.dart';
import 'package:carousel_slider/carousel_slider.dart';
// import 'package:firebase_core/firebase_core.dart'; // Uncomment if you need Firebase for other features

void main() {
  // WidgetsFlutterBinding.ensureInitialized(); // Uncomment if you need Firebase for other features
  // await Firebase.initializeApp(); // Uncomment if you need Firebase for other features
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Tourism Image Carousel',
      theme: ThemeData(
        primarySwatch: Colors.blue,
        visualDensity: VisualDensity.adaptivePlatformDensity,
        fontFamily: 'Inter', // Assuming 'Inter' font is available or desired
      ),
      home: const ImageCarouselScreen(),
    );
  }
}

class ImageCarouselScreen extends StatefulWidget {
  const ImageCarouselScreen({super.key});

  @override
  State<ImageCarouselScreen> createState() => _ImageCarouselScreenState();
}

class _ImageCarouselScreenState extends State<ImageCarouselScreen> {
  int _current = 0; // Tracks the current active image index
  final CarouselController _controller = CarouselController(); // Controller for the carousel

  // List of placeholder image URLs for tourism destinations in Uganda
  final List<String> imgList = [
    'https://placehold.co/600x300/A8DADC/FFFFFF?text=Bwindi+Impenetrable+NP',
    'https://placehold.co/600x300/457B9D/FFFFFF?text=Queen+Elizabeth+NP',
    'https://placehold.co/600x300/1D3557/FFFFFF?text=Murchison+Falls+NP',
    'https://placehold.co/600x300/F4A261/FFFFFF?text=Lake+Bunyonyi',
    'https://placehold.co/600x300/E76F51/FFFFFF?text=Jinja+-+Nile+Source',
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Explore Uganda'),
        centerTitle: true,
        backgroundColor: Colors.blueAccent,
        elevation: 0,
      ),
      body: Center(
        child: SingleChildScrollView( // Allows content to scroll if it overflows
          padding: const EdgeInsets.all(16.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              const Text(
                'Discover Beautiful Destinations',
                style: TextStyle(
                  fontSize: 24,
                  fontWeight: FontWeight.bold,
                  color: Colors.black87,
                ),
                textAlign: TextAlign.center,
              ),
              const SizedBox(height: 20),

              // Image Carousel
              Container(
                decoration: BoxDecoration(
                  borderRadius: BorderRadius.circular(20.0), // Rounded corners for the container
                  boxShadow: [
                    BoxShadow(
                      color: Colors.grey.withOpacity(0.3),
                      spreadRadius: 5,
                      blurRadius: 7,
                      offset: const Offset(0, 3), // changes position of shadow
                    ),
                  ],
                ),
                child: ClipRRect( // Clip images to match container's rounded corners
                  borderRadius: BorderRadius.circular(20.0),
                  child: CarouselSlider(
                    carouselController: _controller,
                    options: CarouselOptions(
                      height: 300.0, // Fixed height for the carousel
                      enlargeCenterPage: true, // Make the current image slightly larger
                      autoPlay: true, // Auto-play the carousel
                      aspectRatio: 16 / 9, // Aspect ratio of the images
                      autoPlayCurve: Curves.fastOutSlowIn,
                      enableInfiniteScroll: true,
                      autoPlayAnimationDuration: const Duration(milliseconds: 800),
                      viewportFraction: 0.8, // Fraction of the viewport taken by each item
                      onPageChanged: (index, reason) {
                        setState(() {
                          _current = index; // Update the current index when page changes
                        });
                      },
                    ),
                    items: imgList.map((item) => Builder(
                      builder: (BuildContext context) {
                        return Container(
                          width: MediaQuery.of(context).size.width,
                          margin: const EdgeInsets.symmetric(horizontal: 5.0),
                          decoration: BoxDecoration(
                            color: Colors.grey[200], // Placeholder background color
                            borderRadius: BorderRadius.circular(10.0),
                          ),
                          child: Image.network(
                            item,
                            fit: BoxFit.cover, // Cover the container space
                            loadingBuilder: (BuildContext context, Widget child, ImageChunkEvent? loadingProgress) {
                              if (loadingProgress == null) return child;
                              return Center(
                                child: CircularProgressIndicator(
                                  value: loadingProgress.expectedTotalBytes != null
                                      ? loadingProgress.cumulativeBytesLoaded / loadingProgress.expectedTotalBytes!
                                      : null,
                                ),
                              );
                            },
                            errorBuilder: (BuildContext context, Object exception, StackTrace? stackTrace) {
                              return const Center(
                                child: Icon(Icons.broken_image, size: 50, color: Colors.grey),
                              );
                            },
                          ),
                        );
                      },
                    )).toList(),
                  ),
                ),
              ),
              const SizedBox(height: 20),

              // Dot Indicators
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: imgList.asMap().entries.map((entry) {
                  return GestureDetector(
                    onTap: () => _controller.animateToPage(entry.key), // Navigate to image on dot tap
                    child: Container(
                      width: 12.0,
                      height: 12.0,
                      margin: const EdgeInsets.symmetric(vertical: 8.0, horizontal: 4.0),
                      decoration: BoxDecoration(
                        shape: BoxShape.circle,
                        color: (Theme.of(context).brightness == Brightness.dark
                                ? Colors.white
                                : Colors.blueAccent)
                            .withOpacity(_current == entry.key ? 0.9 : 0.4), // Active dot is more opaque
                      ),
                    ),
                  );
                }).toList(),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
 return GestureDetector(
                    onTap: () => _controller.animateToPage(entry.key),
                    child: Container(
                      width: 12.0,
                      height: 12.0,
                      margin: const EdgeInsets.symmetric(vertical: 8.0, horizontal: 4.0),
                      decoration: BoxDecoration(
                        shape: BoxShape.circle,
                        color: (Theme.of(context).brightness == Brightness.dark
                                ? Colors.white
                                : Colors.blueAccent)
                            .withOpacity(_current == entry.key ? 0.9 : 0.4), 
                      ),
                    ),
                  );
                }).toList(),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
